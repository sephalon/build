From d6e3bb63370f5b384752047a6db29153e1c7f131 Mon Sep 17 00:00:00 2001
From: Stefan Wiehler <stefan.wiehler@missinglinkelectronics.com>
Date: Tue, 24 Jul 2018 12:25:56 +0200
Subject: [PATCH 1/2] sw_apps: zynqmp_fsbl: Add load address to ATF handoff
 parameters

For OP-TEE OS secure paging support, we need to provide the pageable area load
address to the ATF, but designate it as non-executable. Therefore we set the
execution address to 0 and add the load address as an additional variable to
the ATF handoff parameter structure.

Signed-off-by: Stefan Wiehler <stefan.wiehler@missinglinkelectronics.com>
---
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.c | 5 ++++-
 lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.h | 2 ++
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.c b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.c
index 817a4c434..f9903761e 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.c
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.c
@@ -445,7 +445,6 @@ u32 XFsbl_ReadImageHeader(XFsblPs_ImageHeader * ImageHeader,
 		}
 
 		if ((PartitionIndex > 1U) && (EntryCount < XFSBL_MAX_ENTRIES_FOR_ATF) &&
-				(CurrPartitionHdr->DestinationExecutionAddress != 0U) &&
 				(((DestnCPU >= XIH_PH_ATTRB_DEST_CPU_A53_0) &&
 						(DestnCPU <= XIH_PH_ATTRB_DEST_CPU_A53_3))))
 		{
@@ -915,6 +914,7 @@ static void XFsbl_SetATFHandoffParameters(
 {
 	u32 PartitionAttributes;
 	u32 PartitionFlags;
+	u64 LoadAddress;
 
 	PartitionAttributes = PartitionHeader->PartitionAttributes;
 
@@ -928,6 +928,8 @@ static void XFsbl_SetATFHandoffParameters(
 		((PartitionAttributes & XIH_PH_ATTRB_TARGET_EL_MASK)
 				<< XIH_ATTRB_TARGET_EL_SHIFT_DIFF));
 
+	LoadAddress = PartitionHeader->DestinationLoadAddress;
+
 	/* Update CPU number based on destination CPU */
 	if ((PartitionAttributes & XIH_PH_ATTRB_DEST_CPU_MASK)
 			== XIH_PH_ATTRB_DEST_CPU_A53_0) {
@@ -959,5 +961,6 @@ static void XFsbl_SetATFHandoffParameters(
 	ATFHandoffParams.Entry[EntryCount].EntryPoint =
 			PartitionHeader->DestinationExecutionAddress;
 	ATFHandoffParams.Entry[EntryCount].PartitionFlags = PartitionFlags;
+	ATFHandoffParams.Entry[EntryCount].LoadAddress = LoadAddress;
 
 }
diff --git a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.h b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.h
index dd201ad51..c02acda72 100644
--- a/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.h
+++ b/lib/sw_apps/zynqmp_fsbl/src/xfsbl_image_header.h
@@ -298,6 +298,8 @@ typedef struct {
 	/**< Entry point */
 	u64 PartitionFlags;
 	/**< Attributes of partition */
+	u64 LoadAddress;
+	/**< Load address in DDR/TCM */
 } XFsblPs_PartitionEntry;
 
 /* Structure for handoff parameters to ARM Trusted Firmware (ATF) */
-- 
2.23.0

